iptw <- c(s$coefficients[a,"Estimate"] + c(0,-1,1)*qnorm(0.975)*s$coefficients[a,"Std.err"])
tmle_mod <- tmle(Y = ds[,y], A = ds[,a], W = ds[,covars] )
tmle_out <- c(tmle_mod$estimates$ATE$psi, tmle_mod$estimates$ATE$CI)
out <- as.data.frame(rbind(gcomp_out, iptw, tmle = tmle_out))
row.names(out) <- c("g-comp","iptw","tmle")
names(out) <- c("est","low_ci","high_ci")
ps <- as.data.frame(cbind(ds[,a],pp,tmle_mod$g$g1W))
names(ps) <- c(a,"ps_iptw","ps_tmle")
return(list(est = out,
ps = ps))
}
q <- three_estimation(a = "smoke", y = "fev", covars = c("age","ht","sex"), data = fev, r=1000)
three_out <- q
ps <- three_out$ps
tx0_iptw <- density(ps$ps_iptw[ps[,1]==0])
tx1_iptw <- density(ps$ps_iptw[ps[,1]==1])
tx0_tmle <- density(ps$ps_tmle[ps[,1]==0])
tx1_tmle <- density(ps$ps_tmle[ps[,1]==1])
y_lim <- c(-max(c(tx0_iptw$y,tx0_tmle$y)),max(c(tx1_iptw$y,tx1$tmle$y)))
y_lim <- c(-max(c(tx0_iptw$y,tx0_tmle$y)),max(c(tx1_iptw$y,tx1_tmle$y)))
par(mfrow=c(2,1))
par(mar=c(1.1,4.1,4.1,0))
plot(tx1_iptw, xlim=c(0,1), ylim=y_lim, lwd=2, xlab="PS", main="IPTW",xaxt="n")
lines(tx0_iptw$x,-tx0_iptw$y, col="red", lwd=2)
par(mar=c(5.1,3,4.1,0.1))
plot(tx1_tmle, xlim=c(0,1), ylim=y_lim, lwd=2, xlab="PS", main="TMLE",ylab="")
lines(tx0_tmle$x,-tx0_tmle$y, col="red", lwd=2)
par(mfrow=c(2,1))
par(mar=c(1.1,4.1,4.1,0))
plot(tx1_iptw, xlim=c(0,1), ylim=y_lim, lwd=2, xlab="PS",xaxt="n")
lines(tx0_iptw$x,-tx0_iptw$y, col="red", lwd=2)
par(mar=c(5.1,3,4.1,0.1))
plot(tx1_tmle, xlim=c(0,1), ylim=y_lim, lwd=2, xlab="PS")
lines(tx0_tmle$x,-tx0_tmle$y, col="red", lwd=2)
par(mfrow=c(2,1))
par(mar=c(1.1,4.1,4.1,1.1))
plot(tx1_iptw, xlim=c(0,1), ylim=y_lim, lwd=2, xlab="PS",xaxt="n", main="")
lines(tx0_iptw$x,-tx0_iptw$y, col="red", lwd=2)
par(mar=c(5.1,4.1,1.1,1.1))
plot(tx1_tmle, xlim=c(0,1), ylim=y_lim, lwd=2, xlab="PS", main="")
lines(tx0_tmle$x,-tx0_tmle$y, col="red", lwd=2)
par(mfrow=c(2,1))
par(mar=c(1.1,4.1,4.1,1.1))
plot(tx1_iptw, xlim=c(0,1), ylim=y_lim, lwd=2, xlab="PS",xaxt="n", main="")
text("bottomright","IPTW")
lines(tx0_iptw$x,-tx0_iptw$y, col="red", lwd=2)
par(mar=c(5.1,4.1,1.1,1.1))
plot(tx1_tmle, xlim=c(0,1), ylim=y_lim, lwd=2, xlab="Propensity score", main="")
text("bottomright","TMLE")
lines(tx0_tmle$x,-tx0_tmle$y, col="red", lwd=2)
text("bottomright",labels="IPTW")
plot(tx1_iptw, xlim=c(0,1), ylim=y_lim, lwd=2, xlab="PS",xaxt="n", main="")
text("bottomright",labels="IPTW")
par(mfrow=c(2,1))
par(mar=c(1.1,4.1,4.1,1.1))
plot(tx1_iptw, xlim=c(0,1), ylim=y_lim, lwd=2, xlab="PS",xaxt="n", main="")
text("bottomright",labels="IPTW")
lines(tx0_iptw$x,-tx0_iptw$y, col="red", lwd=2)
par(mar=c(5.1,4.1,1.1,1.1))
plot(tx1_tmle, xlim=c(0,1), ylim=y_lim, lwd=2, xlab="Propensity score", main="")
text("bottomright","TMLE")
lines(tx0_tmle$x,-tx0_tmle$y, col="red", lwd=2)
text(x=0.95, y=ylim[1],labels="IPTW")
text(x=0.95, y=y_lim[1],labels="IPTW")
text(x=0.95, y=y_lim[1],labels="IPTW",cex = 2)
text(x=0.95, y=y_lim[1]*0.9,labels="IPTW",cex = 2)
par(mfrow=c(2,1))
par(mar=c(1.1,4.1,4.1,1.1))
plot(tx1_iptw, xlim=c(0,1), ylim=y_lim, lwd=2, xlab="PS",xaxt="n", main="")
text(x=0.95, y=y_lim[1]*0.9,labels="IPTW",cex = 2)
lines(tx0_iptw$x,-tx0_iptw$y, col="red", lwd=2)
par(mar=c(5.1,4.1,1.1,1.1))
plot(tx1_tmle, xlim=c(0,1), ylim=y_lim, lwd=2, xlab="Propensity score", main="")
text(x=0.95, y=y_lim[1]*0.9,labels="TMLE",cex = 2)
lines(tx0_tmle$x,-tx0_tmle$y, col="red", lwd=2)
par(mfrow=c(2,1))
par(mar=c(1.1,4.1,4.1,1.1))
plot(tx1_iptw, xlim=c(0,1), ylim=y_lim, lwd=2, xlab="PS",xaxt="n", main="")
text(x=0.95, y=y_lim[1]*0.9,labels="IPTW",cex = 1.5)
lines(tx0_iptw$x,-tx0_iptw$y, col="red", lwd=2)
par(mar=c(5.1,4.1,1.1,1.1))
plot(tx1_tmle, xlim=c(0,1), ylim=y_lim, lwd=2, xlab="Propensity score", main="")
text(x=0.95, y=y_lim[1]*0.9,labels="TMLE",cex = 1.5)
lines(tx0_tmle$x,-tx0_tmle$y, col="red", lwd=2)
plot_out <- {par(mfrow=c(2,1))
par(mar=c(1.1,4.1,4.1,1.1))
plot(tx1_iptw, xlim=c(0,1), ylim=y_lim, lwd=2, xlab="PS",xaxt="n", main="")
text(x=0.95, y=y_lim[1]*0.9,labels="IPTW",cex = 1.5)
lines(tx0_iptw$x,-tx0_iptw$y, col="red", lwd=2)
par(mar=c(5.1,4.1,1.1,1.1))
plot(tx1_tmle, xlim=c(0,1), ylim=y_lim, lwd=2, xlab="Propensity score", main="")
text(x=0.95, y=y_lim[1]*0.9,labels="TMLE",cex = 1.5)
lines(tx0_tmle$x,-tx0_tmle$y, col="red", lwd=2)}
ps_viz <- function(three_out) {
ps <- three_out$ps
tx0_iptw <- density(ps$ps_iptw[ps[,1]==0])
tx1_iptw <- density(ps$ps_iptw[ps[,1]==1])
tx0_tmle <- density(ps$ps_tmle[ps[,1]==0])
tx1_tmle <- density(ps$ps_tmle[ps[,1]==1])
y_lim <- c(-max(c(tx0_iptw$y,tx0_tmle$y)),max(c(tx1_iptw$y,tx1_tmle$y)))
plot_out <- {par(mfrow=c(2,1))
par(mar=c(1.1,4.1,4.1,1.1))
plot(tx1_iptw, xlim=c(0,1), ylim=y_lim, lwd=2, xlab="PS",xaxt="n", main="")
text(x=0.95, y=y_lim[1]*0.9,labels="IPTW",cex = 1.5)
lines(tx0_iptw$x,-tx0_iptw$y, col="red", lwd=2)
par(mar=c(5.1,4.1,1.1,1.1))
plot(tx1_tmle, xlim=c(0,1), ylim=y_lim, lwd=2, xlab="Propensity score", main="")
text(x=0.95, y=y_lim[1]*0.9,labels="TMLE",cex = 1.5)
lines(tx0_tmle$x,-tx0_tmle$y, col="red", lwd=2)}
return(plot_out)
}
ps_viz(q)
ps_viz(q)
library(Epi)
data(births)
births <- births[complete.cases(births),]
head(births)
q <- three_estimation(a = "smoke", y = "bweight", covars = c("gestwks","matage","hyp","sex"),data = births, r = 1000)
q <- three_estimation(a = "preterm", y = "bweight", covars = c("matage","hyp","sex"),data = births, r = 1000)
three_out <- q
ps_viz(q)
install.packages("kinship2")
library(kinship2)
data("minnbreast")
head(minnbreast)
table(minnbreast$proband)
table(minnbreast$cancer)
summary(minnbreast)
ds <- minnbreast[complete.cases(minnbreast),]
summary(ds)
q <- three_estimation(a = "bcpc", y = "cancer", covars = c("endage", "yob","education","marstat","everpreg","sex"), data = ds, r = 1000)
q <- three_estimation(a = "bcpc", y = "cancer", covars = c("endage", "yob","education","marstat","everpreg"), data = ds, r = 1000)
ps_viz(q)
q <- three_estimation(y= "bcpc", a = "cancer", covars = c("endage", "yob","education","marstat","everpreg"), data = ds, r = 1000)
ps_viz(q)
educ <- sample(c("H","L"), n)
n <- 10000
educ <- sample(c("H","L"), n)
educ <- sample(c("H","L"), n, replace = TRUE)
floss <- rbinom(n, 1, 0.4 + 0.25*female + 0.2*educ )
n <- 10000
educ <- rbinom(n, 1, 0.8)
female <- rbinom(n, 1, 0.5)
floss <- rbinom(n, 1, 0.4 + 0.25*female + 0.2*educ )
cavity <- rbinom(n, 1, 0.5 - 0.1*female - 0.05*educ - 0.25*floss + 0.2*floss*educ )
#' Expanded logistic regression
#'
#'  Estimates risk ratios using logistic regression with a simple data transformation.
#'
#' @param formula regression formula
#' @param data Data set for analysis
#'
#' @return Returns a list of log scale coefficients and RR scale coefficients
expandedLR <- function(formula, data, id = NULL) {
library(lmtest)
library(sandwich)
# Make outcome variable 'y'
data$y <- data[,all.vars(formula)[1]]
# Assign an 'id' to every observation for clustering
if (is.null(id)) {
data$id <- 1:nrow(data)
} else {
data$id <- data[,id]
}
# Data modification
data_modified <- rbind(data, transform(data[data$y==1, ], y = 0 ))
data_modified[,all.vars(formula)[1]] <- data_modified$y
# Run LR on expanded dataset
model <- glm(formula = formula,
data = data_modified,
family = binomial)
# Use coeftest to get clustered SEs, then clean up the mess that coeftest makes
out_coeftest <- coeftest(model,vcov=vcovCL(model, cluster=data_modified$id))
out <- list()
for(c in 1:dim(out_coeftest)[2]) out[[c]]=out_coeftest[,c]   # writes column values of x to list
out <- as.data.frame(out)                  # converts list to data frame object
names(out) <- c("est","se","z","p")
# Calculate CIs and rename variables
out$lowCI <- out$est - qnorm(0.975)*out$se
out$highCI <- out$est + qnorm(0.975)*out$se
out <- out[,c("est","lowCI","highCI","se","p")]
# Predicted probabilities
data$pp <- model$linear.predictors[1:nrow(data)] %>% exp()
if (any(data$pp>=1,na.rm=T)) warning("PREDICTED PROBABILITIES >= 1")
# Also offer exponentiated coefficients
out_RR <- out[,c("est","lowCI","highCI")] %>% exp
return(list(coefficients = out,
RR_scale = out_RR,
data = data))
}
expandedLR(cavity ~ floss + female + educ)
ds <- data.frame(educ, female, floss, cavity)
expandedLR(cavity ~ floss + female + educ)
expandedLR(cavity ~ floss + female + educ, data=ds)
exp(0.9)
log(0.5)
cavity <- rbinom(n, 1, exp(log(0.5) + log(0.9*female) + log(0.9*educ) + log(0.5*floss) + log(1.5*floss*educ)))
ds <- data.frame(educ, female, floss, cavity)
expandedLR(cavity ~ floss + female + educ, data=ds)
expandedLR(cavity ~ floss + female + educ, data=ds)$RR
expandedLR(cavity ~ floss + female + educ, data=ds)$RR_scale
exp(log(0.5) + log(0.9*female) + log(0.9*educ) + log(0.5*floss) + log(1.5*floss*educ))
log(0.5) + log(0.9*female) + log(0.9*educ) + log(0.5*floss) + log(1.5*floss*educ)
log(0.5)
log(0.9*female)
cavity <- rbinom(n, 1, exp(log(0.5) + log(0.9)*female) + log(0.9)*educ + log(0.5)*floss + log(1.5)*floss*educ))
cavity <- rbinom(n, 1, exp(log(0.5) + log(0.9)*female + log(0.9)*educ + log(0.5)*floss + log(1.5)*floss*educ))
ds <- data.frame(educ, female, floss, cavity)
expandedLR(cavity ~ floss + female + educ, data=ds, )$RR_scale
cavity <- rbinom(n, 1, exp(log(0.5) + log(0.9)*female + log(0.7)*educ + log(0.5)*floss + log(1.5)*floss*educ))
ds <- data.frame(educ, female, floss, cavity)
expandedLR(cavity ~ floss + female + educ, data=ds, )$RR_scale
log(0.9)
log(0.5) + log(0.9/0.5)
cavity <- rbinom(n, 1, exp(log(0.5) + log(0.9)*female + log(0.7)*educ + log(RR_low)*floss + log(RR_high/RR_low)*floss*educ))
prop_high <- 0.8
RR_low <- 0.5
RR_high <- 0.9
educ <- rbinom(n, 1, prop_high)
female <- rbinom(n, 1, 0.5)
floss <- rbinom(n, 1, 0.4 + 0.25*female + 0.2*educ )
cavity <- rbinom(n, 1, exp(log(0.5) + log(0.9)*female + log(0.7)*educ + log(RR_low)*floss + log(RR_high/RR_low)*floss*educ))
ds <- data.frame(educ, female, floss, cavity)
expandedLR(cavity ~ floss + female + educ, data=ds, )$RR_scale
true_marginal <- exp(prop_high*log(RR_high) + (1-prop_high)*log(RR_low))
n <- 10000
prop_high <- 0.8
RR_low <- 0.5
RR_high <- 1
true_marginal <- exp(prop_high*log(RR_high) + (1-prop_high)*log(RR_low))
educ <- rbinom(n, 1, prop_high)
female <- rbinom(n, 1, 0.5)
floss <- rbinom(n, 1, 0.4 + 0.25*female + 0.2*educ )
cavity <- rbinom(n, 1, exp(log(0.5) + log(0.9)*female + log(0.7)*educ + log(RR_low)*floss + log(RR_high/RR_low)*floss*educ))
ds <- data.frame(educ, female, floss, cavity)
expandedLR(cavity ~ floss + female + educ, data=ds, )$RR_scale
three_estimation(a = "floss", y = "cavity", covars = c("sex","educ"), data=ds)
three_estimation(a = "floss", y = "cavity", covars = c("female","educ"), data=ds, r=1000)
three <- three_estimation(a = "floss", y = "cavity", covars = c("female","educ"), data=ds, r=1000)
cond <- expandedLR(cavity ~ floss + female + educ, data=ds, )$RR_scale
cond
c(RR_low=RR_low, RR_high=RR_high, true_marginal=true_marginal, conditional=cond["floss","est"])
c(RR_low=RR_low, RR_high=RR_high, true_marginal=true_marginal, conditional=cond["floss","est"], exp(three$est))
c(RR_low=RR_low, RR_high=RR_high, true_marginal=true_marginal, conditional=cond["floss","est"], exp(three$est$est))
n <- 10000
prop_high <- 0.8
RR_low <- 0.25
RR_high <- 1
true_marginal <- exp(prop_high*log(RR_high) + (1-prop_high)*log(RR_low))
educ <- rbinom(n, 1, prop_high)
female <- rbinom(n, 1, 0.5)
floss <- rbinom(n, 1, 0.4 + 0.25*female + 0.2*educ )
cavity <- rbinom(n, 1, exp(log(0.5) + log(0.9)*female + log(0.7)*educ + log(RR_low)*floss + log(RR_high/RR_low)*floss*educ))
ds <- data.frame(educ, female, floss, cavity)
cond <- expandedLR(cavity ~ floss + female + educ, data=ds, )$RR_scale
three <- three_estimation(a = "floss", y = "cavity", covars = c("female","educ"), data=ds, r=1000)
c(RR_low=RR_low, RR_high=RR_high, true_marginal=true_marginal, conditional=cond["floss","est"], exp(three$est$est))
true_marginal <- prop_high*RR_high + (1-prop_high)*RR_low
n <- 10000
prop_high <- 0.8
RR_low <- 0.25
RR_high <- 1
true_marginal <- prop_high*RR_high + (1-prop_high)*RR_low
educ <- rbinom(n, 1, prop_high)
female <- rbinom(n, 1, 0.5)
floss <- rbinom(n, 1, 0.4 + 0.25*female + 0.2*educ )
cavity <- rbinom(n, 1, exp(log(0.5) + log(0.9)*female + log(0.7)*educ + log(RR_low)*floss + log(RR_high/RR_low)*floss*educ))
ds <- data.frame(educ, female, floss, cavity)
cond <- expandedLR(cavity ~ floss + female + educ, data=ds, )$RR_scale
three <- three_estimation(a = "floss", y = "cavity", covars = c("female","educ"), data=ds, r=1000)
c(RR_low=RR_low, RR_high=RR_high, true_marginal=true_marginal, conditional=cond["floss","est"], exp(three$est$est))
true_marginal <- prop_high*e_high + (1-prop_high)*e_low
n <- 10000
prop_high <- 0.8
e_low <- 4
e_high <- 1
true_marginal <- prop_high*e_high + (1-prop_high)*e_low
educ <- rbinom(n, 1, prop_high)
female <- rbinom(n, 1, 0.5)
floss <- rbinom(n, 1, 0.4 + 0.25*female + 0.2*educ )
tartar <- 10 - 2*female - educ - e_low*floss + (e_low-e_high)*floss*educ
ds <- data.frame(educ, female, floss, cavity)
cond <- expandedLR(cavity ~ floss + female + educ, data=ds, )$RR_scale
three <- three_estimation(a = "floss", y = "cavity", covars = c("female","educ"), data=ds, r=100)
c(RR_low=RR_low, RR_high=RR_high, true_marginal=true_marginal, conditional=cond["floss","est"], exp(three$est$est))
prop_high <- 0.8
e_low <- 4
e_high <- 1
true_marginal <- prop_high*e_high + (1-prop_high)*e_low
educ <- rbinom(n, 1, prop_high)
female <- rbinom(n, 1, 0.5)
floss <- rbinom(n, 1, 0.4 + 0.25*female + 0.2*educ )
tartar <- 10 - 2*female - educ - e_low*floss + (e_low-e_high)*floss*educ
ds <- data.frame(educ, female, floss, cavity)
cond <- expandedLR(cavity ~ floss + female + educ, data=ds )$RR_scale
cond <- lm(cavity ~ floss + female + educ, data=ds)
cond <- lm(cavity ~ floss + female + educ, data=ds)$coef
cond <- lm(cavity ~ floss + female + educ, data=ds)$coefficients["floss"]
n <- 10000
prop_high <- 0.8
e_low <- 4
e_high <- 1
true_marginal <- prop_high*e_high + (1-prop_high)*e_low
educ <- rbinom(n, 1, prop_high)
female <- rbinom(n, 1, 0.5)
floss <- rbinom(n, 1, 0.4 + 0.25*female + 0.2*educ )
tartar <- 10 - 2*female - educ - e_low*floss + (e_low-e_high)*floss*educ
ds <- data.frame(educ, female, floss, tartar)
cond <- lm(tartar ~ floss + female + educ, data=ds)$coefficients["floss"]
three <- three_estimation(a = "floss", y = "tartar", covars = c("female","educ"), data=ds, r=100)$est$est
names(three) <- c("gcomp","iptw","tmle")
c(e_low=e_low, e_high=e_high, true_marginal=true_marginal, conditional=cond, exp(three))
n <- 10000
prop_high <- 0.8
e_low <- -4
e_high <- -1
true_marginal <- prop_high*e_high + (1-prop_high)*e_low
educ <- rbinom(n, 1, prop_high)
female <- rbinom(n, 1, 0.5)
floss <- rbinom(n, 1, 0.4 + 0.25*female + 0.2*educ )
tartar <- 10 - 2*female - educ + e_low*floss + (e_low-e_high)*floss*educ
ds <- data.frame(educ, female, floss, tartar)
cond <- lm(tartar ~ floss + female + educ, data=ds)$coefficients["floss"]
three <- three_estimation(a = "floss", y = "tartar", covars = c("female","educ"), data=ds, r=100)$est$est
names(three) <- c("gcomp","iptw","tmle")
c(e_low=e_low, e_high=e_high, true_marginal=true_marginal, conditional=cond, three)
e_low
e_low-e_high
e_high-e_low
n <- 10000
prop_high <- 0.8
e_low <- -4
e_high <- -1
true_marginal <- prop_high*e_high + (1-prop_high)*e_low
educ <- rbinom(n, 1, prop_high)
female <- rbinom(n, 1, 0.5)
floss <- rbinom(n, 1, 0.4 + 0.25*female + 0.2*educ )
tartar <- 10 - 2*female - educ + e_low*floss + (e_high-e_low)*floss*educ
ds <- data.frame(educ, female, floss, tartar)
cond <- lm(tartar ~ floss + female + educ, data=ds)$coefficients["floss"]
three <- three_estimation(a = "floss", y = "tartar", covars = c("female","educ"), data=ds, r=100)$est$est
names(three) <- c("gcomp","iptw","tmle")
c(e_low=e_low, e_high=e_high, true_marginal=true_marginal, conditional=cond, three)
n <- 10000
prop_high <- 0.8
e_low <- -4
e_high <- 0
true_marginal <- prop_high*e_high + (1-prop_high)*e_low
educ <- rbinom(n, 1, prop_high)
female <- rbinom(n, 1, 0.5)
floss <- rbinom(n, 1, 0.4 + 0.25*female + 0.2*educ )
tartar <- 10 - 2*female - educ + e_low*floss + (e_high-e_low)*floss*educ
ds <- data.frame(educ, female, floss, tartar)
cond <- lm(tartar ~ floss + female + educ, data=ds)$coefficients["floss"]
three <- three_estimation(a = "floss", y = "tartar", covars = c("female","educ"), data=ds, r=100)$est$est
names(three) <- c("gcomp","iptw","tmle")
c(e_low=e_low, e_high=e_high, true_marginal=true_marginal, conditional=cond, three)
c(e_low=e_low, e_high=e_high, true_marginal=true_marginal, conditional=cond, three) %>% round(2)
three <- three_estimation(a = "floss", y = "tartar", covars = c("female","educ"), data=ds, r=1000)$est$est
names(three) <- c("gcomp","iptw","tmle")
c(e_low=e_low, e_high=e_high, true_marginal=true_marginal, conditional=cond, three) %>% round(2)
n <- 10000
prop_high <- 0.5
e_low <- -4
e_high <- 0
true_marginal <- prop_high*e_high + (1-prop_high)*e_low
educ <- rbinom(n, 1, prop_high)
female <- rbinom(n, 1, 0.5)
floss <- rbinom(n, 1, 0.4 + 0.25*female + 0.2*educ )
tartar <- 10 - 2*female - educ + e_low*floss + (e_high-e_low)*floss*educ
ds <- data.frame(educ, female, floss, tartar)
cond <- lm(tartar ~ floss + female + educ, data=ds)$coefficients["floss"]
three <- three_estimation(a = "floss", y = "tartar", covars = c("female","educ"), data=ds, r=100)$est$est
names(three) <- c("gcomp","iptw","tmle")
c(e_low=e_low, e_high=e_high, true_marginal=true_marginal, conditional=cond, three) %>% round(2)
n <- 10000
prop_high <- 0.5
e_low <- -4
e_high <- 0
true_marginal <- prop_high*e_high + (1-prop_high)*e_low
educ <- rbinom(n, 1, prop_high)
female <- rbinom(n, 1, 0.5)
floss <- rbinom(n, 1, 0.4 + 0.1*female + 0.35*educ )
tartar <- 10 - 2*female - educ + e_low*floss + (e_high-e_low)*floss*educ
ds <- data.frame(educ, female, floss, tartar)
cond <- lm(tartar ~ floss + female + educ, data=ds)$coefficients["floss"]
three <- three_estimation(a = "floss", y = "tartar", covars = c("female","educ"), data=ds, r=100)$est$est
names(three) <- c("gcomp","iptw","tmle")
c(e_low=e_low, e_high=e_high, true_marginal=true_marginal, conditional=cond, three) %>% round(2)
n <- 10000
prop_high <- 0.5
e_low <- -2
e_high <- 0
true_marginal <- prop_high*e_high + (1-prop_high)*e_low
educ <- rbinom(n, 1, prop_high)
female <- rbinom(n, 1, 0.5)
floss <- rbinom(n, 1, 0.4 + 0.1*female + 0.35*educ )
tartar <- 10 - 2*female - educ + e_low*floss + (e_high-e_low)*floss*educ
ds <- data.frame(educ, female, floss, tartar)
cond <- lm(tartar ~ floss + female + educ, data=ds)$coefficients["floss"]
three <- three_estimation(a = "floss", y = "tartar", covars = c("female","educ"), data=ds, r=100)$est$est
names(three) <- c("gcomp","iptw","tmle")
c(e_low=e_low, e_high=e_high, true_marginal=true_marginal, conditional=cond, three) %>% round(2)
cond <- lm(tartar ~ floss + female + educ, data=ds)
cond$coefficients$est
cond$coefficients["floss","Estimate"]
cond$coefficients
cond <- summary(lm(tartar ~ floss + female + educ, data=ds))
cond$coefficients["floss","Estimate"]
cond$coefficients
cond$coefficients["floss","Estimate"] + c(0,-1,1)*1.96*cond$coefficients["floss","Std. Error"]
three <- three_estimation(a = "floss", y = "tartar", covars = c("female","educ"), data=ds, r=100)$est
three
rbind(cond$coefficients["floss","Estimate"] + c(0,-1,1)*1.96*cond$coefficients["floss","Std. Error"],three)
out <- rbind(cond$coefficients["floss","Estimate"] + c(0,-1,1)*1.96*cond$coefficients["floss","Std. Error"],three)
row.names(out) <- c("conditional","g-comp","iptw","tmle")
list(c(e_low=e_low, e_high=e_high, true_marginal=true_marginal),
conditional=cond, three) %>% round(2)
list(c(e_low=e_low, e_high=e_high, true_marginal=true_marginal),
estimates=round(out,2))
n <- 10000
prop_high <- 0.5
e_low <- -2
e_high <- 0
true_marginal <- prop_high*e_high + (1-prop_high)*e_low
educ <- rbinom(n, 1, prop_high)
female <- rbinom(n, 1, 0.5)
floss <- rbinom(n, 1, 0.4 + 0.1*female + 0.4*educ )
tartar <- 10 - 2*female - educ + e_low*floss + (e_high-e_low)*floss*educ
ds <- data.frame(educ, female, floss, tartar)
cond <- summary(lm(tartar ~ floss + female + educ, data=ds))
cond$coefficients["floss","Estimate"] + c(0,-1,1)*1.96*cond$coefficients["floss","Std. Error"]
three <- three_estimation(a = "floss", y = "tartar", covars = c("female","educ"), data=ds, r=100)$est
out <- rbind(cond$coefficients["floss","Estimate"] + c(0,-1,1)*1.96*cond$coefficients["floss","Std. Error"],three)
row.names(out) <- c("conditional","g-comp","iptw","tmle")
list(c(e_low=e_low, e_high=e_high, true_marginal=true_marginal),
estimates=round(out,2))
library(tmle)
data(fev)
ds <- fev
y <- "fev"
a <- "smoke"
covars <- c("sex","ht","age")
library(tmle)
library(geepack)
library(boot)
r=100
data <- fev
# Data setup
ds <- data
ds$a <- ds[,a]
ds$id <- 1:nrow(ds)
# G-computation
g_comp <- function(data, ind, y, covars) {
data <- data[ind,]
y_mod <- glm(reformulate(c("a", covars), y), data = data, family=gaussian)
gcomp <- mean(predict(object = y_mod, newdata = transform(data, a = 1)) -
predict(object = y_mod, newdata = transform(data, a = 0)))
return(gcomp)
}
boot_y <- boot(data = ds, statistic = g_comp, R = r, y = y, covars = covars)
gcomp_out <- c(boot_y$t0, boot.ci(boot_y, type = "perc")$perc[c(4,5)])
# IPTW
a_mod <- glm(reformulate(covars,a), data = ds, family=binomial)
pp <- predict(object = a_mod, type = "response")
w <- 1/pp
w[ds$a==0] <- 1/(1-pp[ds$a==0])
iptw <- geepack::geeglm(reformulate(a,y), data = ds, id = id, weights = w, family="gaussian")
s <- summary(iptw)
iptw <- c(s$coefficients[a,"Estimate"] + c(0,-1,1)*qnorm(0.975)*s$coefficients[a,"Std.err"])
tmle_mod <- tmle(Y = ds[,y], A = ds[,a], W = ds[,covars] )
tmle_out <- c(tmle_mod$estimates$ATE$psi, tmle_mod$estimates$ATE$CI)
tmle_mod$estimates
tmle_mod
tmle_mod$Qinit
tmle_mod$Qstar
list(c(e_low=e_low, e_high=e_high, true_marginal=true_marginal),
estimates=round(out,2))
n <- 10000
prop_high <- 0.5
e_low <- -2
e_high <- 0
true_marginal <- prop_high*e_high + (1-prop_high)*e_low
educ <- rbinom(n, 1, prop_high)
female <- rbinom(n, 1, 0.5)
floss <- rbinom(n, 1, 0.4 + 0.1*female + 0.4*educ )
tartar <- 10 - 2*female - educ + e_low*floss + (e_high-e_low)*floss*educ
ds <- data.frame(educ, female, floss, tartar)
cond <- summary(lm(tartar ~ floss + female + educ, data=ds))
cond$coefficients["floss","Estimate"] + c(0,-1,1)*1.96*cond$coefficients["floss","Std. Error"]
three <- three_estimation(a = "floss", y = "tartar", covars = c("female","educ"), data=ds, r=100)$est
out <- rbind(cond$coefficients["floss","Estimate"] + c(0,-1,1)*1.96*cond$coefficients["floss","Std. Error"],three)
row.names(out) <- c("conditional","g-comp","iptw","tmle")
list(c(e_low=e_low, e_high=e_high, true_marginal=true_marginal),
estimates=round(out,2))
n <- 10000
prop_high <- 0.5
e_low <- -2
e_high <- 0
true_marginal <- prop_high*e_high + (1-prop_high)*e_low
educ <- rbinom(n, 1, prop_high)
female <- rbinom(n, 1, 0.5)
floss <- rbinom(n, 1, 0.4 + 0.1*female + 0.4*educ )
tartar <- 10 - 2*female - educ + e_low*floss + (e_high-e_low)*floss*educ
ds <- data.frame(educ, female, floss, tartar)
cond <- summary(lm(tartar ~ floss + female + educ, data=ds))
cond$coefficients["floss","Estimate"] + c(0,-1,1)*1.96*cond$coefficients["floss","Std. Error"]
three <- three_estimation(a = "floss", y = "tartar", covars = c("female","educ"), data=ds, r=100)$est
out <- rbind(cond$coefficients["floss","Estimate"] + c(0,-1,1)*1.96*cond$coefficients["floss","Std. Error"],three)
row.names(out) <- c("conditional","g-comp","iptw","tmle")
list(c(e_low=e_low, e_high=e_high, true_marginal=true_marginal),
estimates=round(out,2))
